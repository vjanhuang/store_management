{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Identify from \"@/components/Identify\";\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      user: {},\n      pass: {},\n      register: {},\n      code: '',\n      dialogFormVisible: false,\n      dialogFormVisible1: false,\n      // 图片验证码\n      identifyCode: '',\n      // 验证码规则\n      identifyCodes: '3456789ABCDEFGHGKMNPQRSTUVWXY',\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      },\n      registerRules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        confirmPassword: [{\n          required: true,\n          message: '请确认密码',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  components: {\n    Identify\n  },\n  mounted() {\n    // this.refreshCode()\n  },\n  methods: {\n    login() {\n      // if (this.code !== this.identifyCode.toLowerCase()) {\n      //   this.$message({\n      //     type: \"error\",\n      //     message: \"验证码错误\"\n      //   })\n      //   return;\n      // }\n      this.$refs['userForm'].validate(valid => {\n        if (valid) {\n          // 表单校验合法\n          this.request.post(\"/login\", this.user).then(res => {\n            if (res.code === '200') {\n              localStorage.setItem(\"user\", JSON.stringify(res.data)); // 存储用户信息到浏览器\n              this.$router.push(\"/\");\n              this.$message.success(\"登录成功\");\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    },\n    handleRegister() {\n      this.register = {};\n      this.dialogFormVisible1 = true;\n    },\n    doRegister() {\n      this.$refs['registerForm'].validate(valid => {\n        if (valid) {\n          // 表单校验合法\n          this.request.post(\"/register\", this.register).then(res => {\n            if (res.code === '200') {\n              this.$message.success(\"注册成功\");\n              this.dialogFormVisible1 = false;\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    },\n    handlePass() {\n      this.dialogFormVisible = true;\n      this.pass = {};\n    },\n    passwordBack() {\n      this.request.put(\"/resetPassword\", this.pass).then(res => {\n        if (res.code === '200') {\n          this.$message.success(\"重置密码成功，新密码为：123，请登录后尽快修改密码\");\n          this.dialogFormVisible = false;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    // 切换验证码\n    refreshCode() {\n      this.identifyCode = '';\n      this.makeCode(this.identifyCodes, 4);\n    },\n    // 生成随机验证码\n    makeCode(o, l) {\n      for (let i = 0; i < l; i++) {\n        this.identifyCode += this.identifyCodes[Math.floor(Math.random() * this.identifyCodes.length)];\n      }\n    }\n  }\n};","map":{"version":3,"names":["Identify","name","data","user","pass","register","code","dialogFormVisible","dialogFormVisible1","identifyCode","identifyCodes","rules","username","required","message","trigger","password","registerRules","confirmPassword","components","mounted","methods","login","$refs","validate","valid","request","post","then","res","localStorage","setItem","JSON","stringify","$router","push","$message","success","error","msg","handleRegister","doRegister","handlePass","passwordBack","put","refreshCode","makeCode","o","l","i","Math","floor","random","length"],"sources":["src/views/Login.vue"],"sourcesContent":["\r\n<!--作者：程序员青戈。关注公众号：Java学习指南，获取更多干货源码教程-->\r\n<template>\r\n  <div class=\"wrapper\">\r\n    <div style=\"margin: 200px auto;  width: 360px; height: 320px;\">\r\n      <div style=\"margin: 20px 0; color: dodgerblue; text-align: center; font-size: 30px\"><b>仓库管理系统</b></div>\r\n      <div style=\"text-align: center; margin: 20px 0\">B站搜：程序员青戈</div>\r\n      <el-form :model=\"user\" :rules=\"rules\" ref=\"userForm\" style=\"padding: 0 20px\">\r\n        <el-form-item prop=\"username\">\r\n          <el-input size=\"medium\" prefix-icon=\"el-icon-user\" v-model=\"user.username\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input size=\"medium\" prefix-icon=\"el-icon-lock\" show-password v-model=\"user.password\"></el-input>\r\n        </el-form-item>\r\n        <!--        <el-form-item>-->\r\n        <!--          <div style=\"display: flex\">-->\r\n        <!--            <el-input size=\"mid\" v-model=\"code\" style=\"width: 200px\"></el-input>-->\r\n        <!--            <span @click=\"refreshCode\" style=\"cursor: pointer; flex: 1;\">-->\r\n        <!--              <Identify :identifyCode=\"identifyCode\"></Identify>-->\r\n        <!--           </span>-->\r\n        <!--          </div>-->\r\n        <!--        </el-form-item>-->\r\n\r\n        <el-form-item>\r\n          <el-button style=\"width: 100%; background-color: dodgerblue; border: 1px solid dodgerblue; color: white\" size=\"medium\" @click=\"login\">登录</el-button>\r\n\r\n        </el-form-item>\r\n        <el-form-item style=\"margin: 10px 0;\">\r\n<!--          <el-button style=\"color: orange;\" size=\"medium\" type=\"text\" @click=\"handleRegister\">立即注册</el-button>-->\r\n<!--          <el-button style=\"color: dodgerblue\" type=\"text\" size=\"medium\" @click=\"handlePass\">找回密码</el-button>-->\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n\r\n\r\n    <el-dialog title=\"找回密码\" :visible.sync=\"dialogFormVisible\" width=\"400px\" >\r\n      <el-form label-width=\"80px\" style=\"padding-right: 20px\">\r\n        <el-form-item label=\"用户名\">\r\n          <el-input v-model=\"pass.username\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"手机号\">\r\n          <el-input v-model=\"pass.phone\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"passwordBack\">重置密码</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <el-dialog title=\"注册\" :visible.sync=\"dialogFormVisible1\" width=\"400px\" >\r\n      <el-form label-width=\"80px\" style=\"padding-right: 20px\" ref=\"registerForm\" :model=\"register\" :rules=\"registerRules\">\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input v-model=\"register.username\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"password\">\r\n          <el-input v-model=\"register.password\" autocomplete=\"off\" show-password></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\r\n          <el-input v-model=\"register.confirmPassword\" autocomplete=\"off\" show-password></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogFormVisible1 = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"doRegister\">注 册</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Identify from \"@/components/Identify\";\r\n\r\nexport default {\r\n  name: \"Login\",\r\n  data() {\r\n    return {\r\n      user: {},\r\n      pass: {},\r\n      register: {},\r\n      code: '',\r\n      dialogFormVisible: false,\r\n      dialogFormVisible1: false,\r\n      // 图片验证码\r\n      identifyCode: '',\r\n      // 验证码规则\r\n      identifyCodes: '3456789ABCDEFGHGKMNPQRSTUVWXY',\r\n      rules: {\r\n        username: [\r\n          { required: true, message: '请输入用户名', trigger: 'blur' },\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n        ],\r\n      },\r\n      registerRules: {\r\n        username: [\r\n          { required: true, message: '请输入用户名', trigger: 'blur' },\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n        ],\r\n        confirmPassword: [\r\n          { required: true, message: '请确认密码', trigger: 'blur' },\r\n        ],\r\n      }\r\n    }\r\n  },\r\n  components: {Identify},\r\n  mounted() {\r\n    // this.refreshCode()\r\n  },\r\n  methods: {\r\n    login() {\r\n      // if (this.code !== this.identifyCode.toLowerCase()) {\r\n      //   this.$message({\r\n      //     type: \"error\",\r\n      //     message: \"验证码错误\"\r\n      //   })\r\n      //   return;\r\n      // }\r\n      this.$refs['userForm'].validate((valid) => {\r\n        if (valid) {  // 表单校验合法\r\n          this.request.post(\"/login\", this.user).then(res => {\r\n            if(res.code === '200') {\r\n              localStorage.setItem(\"user\", JSON.stringify(res.data))  // 存储用户信息到浏览器\r\n              this.$router.push(\"/\")\r\n              this.$message.success(\"登录成功\")\r\n            } else {\r\n              this.$message.error(res.msg)\r\n            }\r\n          })\r\n        }\r\n      });\r\n    },\r\n    handleRegister() {\r\n      this.register = {}\r\n      this.dialogFormVisible1 = true\r\n    },\r\n    doRegister() {\r\n      this.$refs['registerForm'].validate((valid) => {\r\n        if (valid) {  // 表单校验合法\r\n          this.request.post(\"/register\", this.register).then(res => {\r\n            if(res.code === '200') {\r\n              this.$message.success(\"注册成功\")\r\n              this.dialogFormVisible1 = false\r\n            } else {\r\n              this.$message.error(res.msg)\r\n            }\r\n          })\r\n        }\r\n      });\r\n    },\r\n    handlePass() {\r\n      this.dialogFormVisible = true\r\n      this.pass = {}\r\n    },\r\n    passwordBack() {\r\n      this.request.put(\"/resetPassword\", this.pass).then(res => {\r\n        if (res.code === '200') {\r\n          this.$message.success(\"重置密码成功，新密码为：123，请登录后尽快修改密码\")\r\n          this.dialogFormVisible = false\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    // 切换验证码\r\n    refreshCode() {\r\n      this.identifyCode = ''\r\n      this.makeCode(this.identifyCodes, 4)\r\n    },\r\n    // 生成随机验证码\r\n    makeCode(o, l) {\r\n      for (let i = 0; i < l; i++) {\r\n        this.identifyCode += this.identifyCodes[Math.floor(Math.random() * (this.identifyCodes.length))]\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.wrapper {\r\n  height: 100vh;\r\n  /*background-image: url(\"../assets/bg.jpg\");*/\r\n  /*background-size: cover;*/\r\n  /*background-color: rgb(102, 177, 255);*/\r\n  background: linear-gradient(137deg, #afd9f7,#f0f2ff);\r\n  overflow: hidden;\r\n}\r\n</style>\r\n"],"mappings":";AAuEA,OAAAA,QAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,IAAA;MACAC,QAAA;MACAC,IAAA;MACAC,iBAAA;MACAC,kBAAA;MACA;MACAC,YAAA;MACA;MACAC,aAAA;MACAC,KAAA;QACAC,QAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAC,QAAA,GACA;UAAAH,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;MACAE,aAAA;QACAL,QAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAC,QAAA,GACA;UAAAH,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAG,eAAA,GACA;UAAAL,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAI,UAAA;IAAAnB;EAAA;EACAoB,QAAA;IACA;EAAA,CACA;EACAC,OAAA;IACAC,MAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,KAAAC,KAAA,aAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UAAA;UACA,KAAAC,OAAA,CAAAC,IAAA,gBAAAxB,IAAA,EAAAyB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAvB,IAAA;cACAwB,YAAA,CAAAC,OAAA,SAAAC,IAAA,CAAAC,SAAA,CAAAJ,GAAA,CAAA3B,IAAA;cACA,KAAAgC,OAAA,CAAAC,IAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;YACA;cACA,KAAAD,QAAA,CAAAE,KAAA,CAAAT,GAAA,CAAAU,GAAA;YACA;UACA;QACA;MACA;IACA;IACAC,eAAA;MACA,KAAAnC,QAAA;MACA,KAAAG,kBAAA;IACA;IACAiC,WAAA;MACA,KAAAlB,KAAA,iBAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UAAA;UACA,KAAAC,OAAA,CAAAC,IAAA,mBAAAtB,QAAA,EAAAuB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAvB,IAAA;cACA,KAAA8B,QAAA,CAAAC,OAAA;cACA,KAAA7B,kBAAA;YACA;cACA,KAAA4B,QAAA,CAAAE,KAAA,CAAAT,GAAA,CAAAU,GAAA;YACA;UACA;QACA;MACA;IACA;IACAG,WAAA;MACA,KAAAnC,iBAAA;MACA,KAAAH,IAAA;IACA;IACAuC,aAAA;MACA,KAAAjB,OAAA,CAAAkB,GAAA,wBAAAxC,IAAA,EAAAwB,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAvB,IAAA;UACA,KAAA8B,QAAA,CAAAC,OAAA;UACA,KAAA9B,iBAAA;QACA;UACA,KAAA6B,QAAA,CAAAE,KAAA,CAAAT,GAAA,CAAAU,GAAA;QACA;MACA;IACA;IACA;IACAM,YAAA;MACA,KAAApC,YAAA;MACA,KAAAqC,QAAA,MAAApC,aAAA;IACA;IACA;IACAoC,SAAAC,CAAA,EAAAC,CAAA;MACA,SAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,EAAAC,CAAA;QACA,KAAAxC,YAAA,SAAAC,aAAA,CAAAwC,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,MAAA,UAAA1C,aAAA,CAAA2C,MAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}