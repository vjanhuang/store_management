{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// 作者：程序员青戈。关注公众号：Java学习指南，获取更多干货源码教程\n\nimport axios from 'axios';\nimport router from \"@/router\";\nimport { Message } from \"element-ui\";\nconst request = axios.create({\n  baseURL: process.env.VUE_APP_BASEURL,\n  timeout: 30000\n});\n\n// request 拦截器\n// 可以自请求发送前对请求做一些处理\n// 比如统一加token，对请求参数统一加密\nrequest.interceptors.request.use(config => {\n  config.headers['Content-Type'] = 'application/json;charset=utf-8';\n  let user = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : null;\n  config.headers['token'] = user?.token; // 设置请求头\n\n  return config;\n}, error => {\n  console.error('request error: ' + error); // for debug\n  return Promise.reject(error);\n});\n\n// response 拦截器\n// 可以在接口响应后统一处理结果\nrequest.interceptors.response.use(response => {\n  let res = response.data;\n  // 如果是返回的文件\n  if (response.config.responseType === 'blob') {\n    return res;\n  }\n  // 当权限验证不通过的时候给出提示\n  debugger;\n  if (res.code === '401') {\n    Message.error(res.msg);\n    router.push(\"/login\");\n    return new Promise.reject(new Error('token已失效'));\n  }\n  return res;\n}, error => {\n  console.error('response error: ' + error); // for debug\n  return Promise.reject(error);\n});\nexport default request;","map":{"version":3,"names":["axios","router","Message","request","create","baseURL","process","env","VUE_APP_BASEURL","timeout","interceptors","use","config","headers","user","localStorage","getItem","JSON","parse","token","error","console","Promise","reject","response","res","data","responseType","code","msg","push","Error"],"sources":["D:/毕设/B站/仓库管理系统/manager/vue/src/utils/request.js"],"sourcesContent":["// 作者：程序员青戈。关注公众号：Java学习指南，获取更多干货源码教程\r\n\r\nimport axios from 'axios'\r\nimport router from \"@/router\";\r\nimport {Message} from \"element-ui\";\r\n\r\nconst request = axios.create({\r\n    baseURL: process.env.VUE_APP_BASEURL,\r\n    timeout: 30000\r\n})\r\n\r\n// request 拦截器\r\n// 可以自请求发送前对请求做一些处理\r\n// 比如统一加token，对请求参数统一加密\r\nrequest.interceptors.request.use(config => {\r\n    config.headers['Content-Type'] = 'application/json;charset=utf-8';\r\n    let user = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : null\r\n    config.headers['token'] = user?.token;  // 设置请求头\r\n\r\n    return config\r\n}, error => {\r\n    console.error('request error: ' + error) // for debug\r\n    return Promise.reject(error)\r\n});\r\n\r\n// response 拦截器\r\n// 可以在接口响应后统一处理结果\r\nrequest.interceptors.response.use(\r\n    response => {\r\n        let res = response.data;\r\n        // 如果是返回的文件\r\n        if (response.config.responseType === 'blob') {\r\n            return res\r\n        }\r\n        // 当权限验证不通过的时候给出提示\r\n        debugger\r\n        if (res.code === '401') {\r\n            Message.error(res.msg);\r\n            router.push(\"/login\")\r\n            return new Promise.reject(new Error('token已失效'))\r\n        }\r\n        return res;\r\n    },\r\n    error => {\r\n        console.error('response error: ' + error) // for debug\r\n        return Promise.reject(error)\r\n    }\r\n)\r\n\r\n\r\nexport default request\r\n\r\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAAQC,OAAO,QAAO,YAAY;AAElC,MAAMC,OAAO,GAAGH,KAAK,CAACI,MAAM,CAAC;EACzBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,eAAe;EACpCC,OAAO,EAAE;AACb,CAAC,CAAC;;AAEF;AACA;AACA;AACAN,OAAO,CAACO,YAAY,CAACP,OAAO,CAACQ,GAAG,CAACC,MAAM,IAAI;EACvCA,MAAM,CAACC,OAAO,CAAC,cAAc,CAAC,GAAG,gCAAgC;EACjE,IAAIC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI;EACzFJ,MAAM,CAACC,OAAO,CAAC,OAAO,CAAC,GAAGC,IAAI,EAAEK,KAAK,CAAC,CAAE;;EAExC,OAAOP,MAAM;AACjB,CAAC,EAAEQ,KAAK,IAAI;EACRC,OAAO,CAACD,KAAK,CAAC,iBAAiB,GAAGA,KAAK,CAAC,EAAC;EACzC,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAChC,CAAC,CAAC;;AAEF;AACA;AACAjB,OAAO,CAACO,YAAY,CAACc,QAAQ,CAACb,GAAG,CAC7Ba,QAAQ,IAAI;EACR,IAAIC,GAAG,GAAGD,QAAQ,CAACE,IAAI;EACvB;EACA,IAAIF,QAAQ,CAACZ,MAAM,CAACe,YAAY,KAAK,MAAM,EAAE;IACzC,OAAOF,GAAG;EACd;EACA;EACA;EACA,IAAIA,GAAG,CAACG,IAAI,KAAK,KAAK,EAAE;IACpB1B,OAAO,CAACkB,KAAK,CAACK,GAAG,CAACI,GAAG,CAAC;IACtB5B,MAAM,CAAC6B,IAAI,CAAC,QAAQ,CAAC;IACrB,OAAO,IAAIR,OAAO,CAACC,MAAM,CAAC,IAAIQ,KAAK,CAAC,UAAU,CAAC,CAAC;EACpD;EACA,OAAON,GAAG;AACd,CAAC,EACDL,KAAK,IAAI;EACLC,OAAO,CAACD,KAAK,CAAC,kBAAkB,GAAGA,KAAK,CAAC,EAAC;EAC1C,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAChC,CACJ,CAAC;AAGD,eAAejB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}