{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"Manager\",\n  data() {\n    return {\n      user: {},\n      time: getTime(),\n      collapse: false,\n      menuWidth: '200px',\n      icon: 'el-icon-s-fold'\n    };\n  },\n  created() {\n    // 从后台获取最新的User数据\n    this.getUser();\n    setInterval(() => {\n      this.time = getTime();\n    }, 1000);\n  },\n  methods: {\n    handleCollapse() {\n      this.collapse = !this.collapse;\n      this.menuWidth = this.menuWidth === '64px' ? '200px' : '64px';\n      this.icon = this.icon === 'el-icon-s-unfold' ? 'el-icon-s-fold' : 'el-icon-s-unfold';\n    },\n    getUser() {\n      let userId = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")).id : 0;\n      if (userId) {\n        // 从后台获取User数据\n        this.request.get(\"/user/\" + userId).then(res => {\n          // 重新赋值后台的最新User数据\n          this.user = res.data;\n        });\n      }\n    },\n    logout() {\n      localStorage.removeItem('user');\n      this.$router.push('/login');\n    }\n  }\n};\nfunction getTime() {\n  // 获取时间戳\n  const newDate = new Date();\n  const year = newDate.getFullYear();\n  let month = newDate.getMonth() + 1;\n  const date = newDate.getDate();\n  let hour = newDate.getHours();\n  let minute = newDate.getMinutes();\n  let second = newDate.getSeconds();\n  if (hour < 10) {\n    hour = \"0\" + hour;\n  }\n  if (minute < 10) {\n    minute = \"0\" + minute;\n  }\n  if (second < 10) {\n    second = \"0\" + second;\n  }\n  return `${year}/${month}/${date} ${hour}:${minute}:${second}`;\n}","map":{"version":3,"names":["name","data","user","time","getTime","collapse","menuWidth","icon","created","getUser","setInterval","methods","handleCollapse","userId","localStorage","getItem","JSON","parse","id","request","get","then","res","logout","removeItem","$router","push","newDate","Date","year","getFullYear","month","getMonth","date","getDate","hour","getHours","minute","getMinutes","second","getSeconds"],"sources":["src/components/Manager.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- header-->\r\n    <div style=\"height: 40px; line-height: 40px; background-color: dodgerblue; display: flex\">\r\n      <div style=\"font-size: 16px; color: #eee; font-weight: bold; width: 200px; text-align: center\">\r\n        仓库管理系统\r\n      </div>\r\n\r\n      <div style=\"flex: 1\">\r\n        <i :class=\"icon\" style=\"font-size: 20px; color: white; position: relative; top: 2px; cursor: pointer;\" @click=\"handleCollapse\"></i>\r\n      </div>\r\n\r\n      <div style=\"width: 400px;  display: flex; padding-right: 30px;\">\r\n        <div style=\"flex: 1; color: white; font-size: 14px; text-align: right; margin-right: 10px\">北京时间： {{ time }}</div>\r\n        <el-dropdown placement=\"bottom\" style=\"text-align: right;\">\r\n          <el-avatar :size=\"30\" style=\"margin-top: 5px\" :src=\"user.avatar\"></el-avatar>\r\n\r\n          <el-dropdown-menu slot=\"dropdown\">\r\n            <el-dropdown-item><div @click=\"$router.push('/person')\">个人信息</div></el-dropdown-item>\r\n            <el-dropdown-item><div @click=\"logout\">退出登录</div></el-dropdown-item>\r\n          </el-dropdown-menu>\r\n        </el-dropdown>\r\n\r\n      </div>\r\n    </div>\r\n\r\n    <!-- bottom -->\r\n    <div style=\"display: flex; min-height: calc(100vh - 40px)\">\r\n      <!-- aside -->\r\n      <div :style=\"{'width': menuWidth }\">\r\n        <el-menu style=\"min-height: 100%; overflow-x: hidden;\"\r\n                 :default-active=\"$route.path\"\r\n                 :collapse=\"collapse\"\r\n                 :collapse-transition=\"false\"\r\n                 router\r\n        >\r\n          <el-menu-item index=\"/home\">\r\n            <i class=\"el-icon-s-home\"></i>\r\n            <span slot=\"title\">主页</span>\r\n          </el-menu-item>\r\n          <el-menu-item index=\"/goods\">\r\n            <i class=\"el-icon-receiving\"></i>\r\n            <span slot=\"title\">物品管理</span>\r\n          </el-menu-item>\r\n          <el-menu-item index=\"/stash\">\r\n            <i class=\"el-icon-box\"></i>\r\n            <span slot=\"title\">仓库管理</span>\r\n          </el-menu-item>\r\n          <el-menu-item index=\"/storein\">\r\n            <i class=\"el-icon-bottom-right\"></i>\r\n            <span slot=\"title\">入库管理</span>\r\n          </el-menu-item>\r\n          <el-menu-item index=\"/storeout\">\r\n            <i class=\"el-icon-top-right\"></i>\r\n            <span slot=\"title\">出库管理</span>\r\n          </el-menu-item>\r\n          <el-menu-item index=\"/store\">\r\n            <i class=\"el-icon-s-order\"></i>\r\n            <span slot=\"title\">库存记录</span>\r\n          </el-menu-item>\r\n          <el-menu-item index=\"/user\" v-if=\"user.role === 'ADMIN'\">\r\n            <i class=\"el-icon-s-custom\"></i>\r\n            <span slot=\"title\">用户管理</span>\r\n          </el-menu-item>\r\n        </el-menu>\r\n      </div>\r\n\r\n      <!-- main -->\r\n      <div style=\"width: 0; flex: 1; padding: 10px\">\r\n        <router-view @refreshUser=\"getUser\" />\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Manager\",\r\n  data() {\r\n    return {\r\n      user: {},\r\n      time: getTime(),\r\n      collapse: false,\r\n      menuWidth: '200px',\r\n      icon: 'el-icon-s-fold',\r\n    }\r\n  },\r\n  created() {\r\n    // 从后台获取最新的User数据\r\n    this.getUser()\r\n\r\n    setInterval(() => {\r\n      this.time = getTime()\r\n    }, 1000)\r\n  },\r\n  methods: {\r\n    handleCollapse() {\r\n      this.collapse = !this.collapse\r\n      this.menuWidth = this.menuWidth === '64px' ? '200px' : '64px'\r\n      this.icon = this.icon === 'el-icon-s-unfold' ? 'el-icon-s-fold' : 'el-icon-s-unfold'\r\n    },\r\n    getUser() {\r\n      let userId = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")).id : 0\r\n      if (userId) {\r\n        // 从后台获取User数据\r\n        this.request.get(\"/user/\" + userId).then(res => {\r\n          // 重新赋值后台的最新User数据\r\n          this.user = res.data\r\n        })\r\n      }\r\n    },\r\n    logout() {\r\n      localStorage.removeItem('user')\r\n      this.$router.push('/login')\r\n    }\r\n  }\r\n}\r\n\r\nfunction getTime() {\r\n  // 获取时间戳\r\n  const newDate = new Date();\r\n  const year = newDate.getFullYear();\r\n  let month = newDate.getMonth() + 1;\r\n  const date = newDate.getDate();\r\n  let hour = newDate.getHours();\r\n  let minute = newDate.getMinutes();\r\n  let second = newDate.getSeconds();\r\n  if (hour < 10) {\r\n    hour = \"0\" + hour\r\n  }\r\n  if (minute < 10) {\r\n    minute = \"0\" + minute\r\n  }\r\n  if (second < 10) {\r\n    second = \"0\" + second\r\n  }\r\n  return `${year}/${month}/${date} ${hour}:${minute}:${second}`;\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.el-submenu /deep/.el-submenu__title {\r\n  height: 40px;\r\n  line-height: 40px;\r\n}\r\n/deep/.el-menu-item {\r\n  height: 40px;\r\n  line-height: 40px;\r\n}\r\n\r\n</style>"],"mappings":";AA6EA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,IAAA,EAAAC,OAAA;MACAC,QAAA;MACAC,SAAA;MACAC,IAAA;IACA;EACA;EACAC,QAAA;IACA;IACA,KAAAC,OAAA;IAEAC,WAAA;MACA,KAAAP,IAAA,GAAAC,OAAA;IACA;EACA;EACAO,OAAA;IACAC,eAAA;MACA,KAAAP,QAAA,SAAAA,QAAA;MACA,KAAAC,SAAA,QAAAA,SAAA;MACA,KAAAC,IAAA,QAAAA,IAAA;IACA;IACAE,QAAA;MACA,IAAAI,MAAA,GAAAC,YAAA,CAAAC,OAAA,WAAAC,IAAA,CAAAC,KAAA,CAAAH,YAAA,CAAAC,OAAA,UAAAG,EAAA;MACA,IAAAL,MAAA;QACA;QACA,KAAAM,OAAA,CAAAC,GAAA,YAAAP,MAAA,EAAAQ,IAAA,CAAAC,GAAA;UACA;UACA,KAAApB,IAAA,GAAAoB,GAAA,CAAArB,IAAA;QACA;MACA;IACA;IACAsB,OAAA;MACAT,YAAA,CAAAU,UAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;EACA;AACA;AAEA,SAAAtB,QAAA;EACA;EACA,MAAAuB,OAAA,OAAAC,IAAA;EACA,MAAAC,IAAA,GAAAF,OAAA,CAAAG,WAAA;EACA,IAAAC,KAAA,GAAAJ,OAAA,CAAAK,QAAA;EACA,MAAAC,IAAA,GAAAN,OAAA,CAAAO,OAAA;EACA,IAAAC,IAAA,GAAAR,OAAA,CAAAS,QAAA;EACA,IAAAC,MAAA,GAAAV,OAAA,CAAAW,UAAA;EACA,IAAAC,MAAA,GAAAZ,OAAA,CAAAa,UAAA;EACA,IAAAL,IAAA;IACAA,IAAA,SAAAA,IAAA;EACA;EACA,IAAAE,MAAA;IACAA,MAAA,SAAAA,MAAA;EACA;EACA,IAAAE,MAAA;IACAA,MAAA,SAAAA,MAAA;EACA;EACA,UAAAV,IAAA,IAAAE,KAAA,IAAAE,IAAA,IAAAE,IAAA,IAAAE,MAAA,IAAAE,MAAA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}