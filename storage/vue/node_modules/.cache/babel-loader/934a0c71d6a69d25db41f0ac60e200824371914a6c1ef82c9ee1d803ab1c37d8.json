{"ast":null,"code":"export default {\n  name: \"Person\",\n  data() {\n    return {\n      form: {},\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {}\n    };\n  },\n  created() {\n    this.load();\n  },\n  methods: {\n    load() {\n      this.request.get(\"/user/\" + this.user.id).then(res => {\n        this.form = res.data || {};\n      });\n    },\n    save() {\n      this.request.put(\"/user\", this.form).then(res => {\n        if (res.code === '200') {\n          this.$message.success(\"操作成功\");\n          // 更新浏览器存储的用户信息\n          this.form.token = this.user.token;\n          localStorage.setItem(\"user\", JSON.stringify(this.form));\n\n          // 触发父级更新User的方法\n          this.$emit(\"refreshUser\");\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    handleAvatarSuccess(res) {\n      this.form.avatar = res;\n    }\n  }\n};","map":{"version":3,"names":["name","data","form","user","localStorage","getItem","JSON","parse","created","load","methods","request","get","id","then","res","save","put","code","$message","success","token","setItem","stringify","$emit","error","msg","handleAvatarSuccess","avatar"],"sources":["src/views/manager/Person.vue"],"sourcesContent":["<template>\r\n  <el-card style=\"width: 500px; margin: 10px auto\">\r\n    <el-form label-width=\"80px\">\r\n      <el-upload\r\n          class=\"avatar-uploader\"\r\n          :action=\"$baseUrl + '/file/upload'\"\r\n          :show-file-list=\"false\"\r\n          :on-success=\"handleAvatarSuccess\"\r\n      >\r\n        <img v-if=\"form.avatar\" :src=\"form.avatar\" class=\"avatar\">\r\n        <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n      </el-upload>\r\n\r\n      <el-form-item label=\"用户名\">\r\n        <el-input v-model=\"form.username\" disabled autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"姓名\">\r\n        <el-input v-model=\"form.name\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"电话\">\r\n        <el-input v-model=\"form.phone\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"地址\">\r\n        <el-input type=\"textarea\" v-model=\"form.address\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </el-card>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: \"Person\",\r\n  data() {\r\n    return {\r\n      form: {},\r\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {}\r\n    }\r\n  },\r\n  created() {\r\n    this.load()\r\n  },\r\n  methods: {\r\n    load() {\r\n      this.request.get(\"/user/\" + this.user.id).then(res => {\r\n        this.form = res.data || {}\r\n      })\r\n    },\r\n    save() {\r\n      this.request.put(\"/user\", this.form).then(res => {\r\n        if (res.code === '200') {\r\n          this.$message.success(\"操作成功\")\r\n          // 更新浏览器存储的用户信息\r\n          this.form.token = this.user.token\r\n          localStorage.setItem(\"user\", JSON.stringify(this.form))\r\n\r\n          // 触发父级更新User的方法\r\n          this.$emit(\"refreshUser\")\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    handleAvatarSuccess(res) {\r\n      this.form.avatar = res\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.avatar-uploader {\r\n  text-align: center;\r\n  padding-bottom: 10px;\r\n}\r\n.avatar-uploader .el-upload {\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n.avatar-uploader .el-upload:hover {\r\n  border-color: #409EFF;\r\n}\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 138px;\r\n  height: 138px;\r\n  line-height: 138px;\r\n  text-align: center;\r\n}\r\n.avatar {\r\n  width: 138px;\r\n  height: 138px;\r\n  display: block;\r\n}\r\n</style>\r\n"],"mappings":"AAkCA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,IAAA,EAAAC,YAAA,CAAAC,OAAA,WAAAC,IAAA,CAAAC,KAAA,CAAAH,YAAA,CAAAC,OAAA;IACA;EACA;EACAG,QAAA;IACA,KAAAC,IAAA;EACA;EACAC,OAAA;IACAD,KAAA;MACA,KAAAE,OAAA,CAAAC,GAAA,iBAAAT,IAAA,CAAAU,EAAA,EAAAC,IAAA,CAAAC,GAAA;QACA,KAAAb,IAAA,GAAAa,GAAA,CAAAd,IAAA;MACA;IACA;IACAe,KAAA;MACA,KAAAL,OAAA,CAAAM,GAAA,eAAAf,IAAA,EAAAY,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAG,IAAA;UACA,KAAAC,QAAA,CAAAC,OAAA;UACA;UACA,KAAAlB,IAAA,CAAAmB,KAAA,QAAAlB,IAAA,CAAAkB,KAAA;UACAjB,YAAA,CAAAkB,OAAA,SAAAhB,IAAA,CAAAiB,SAAA,MAAArB,IAAA;;UAEA;UACA,KAAAsB,KAAA;QACA;UACA,KAAAL,QAAA,CAAAM,KAAA,CAAAV,GAAA,CAAAW,GAAA;QACA;MACA;IACA;IACAC,oBAAAZ,GAAA;MACA,KAAAb,IAAA,CAAA0B,MAAA,GAAAb,GAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}